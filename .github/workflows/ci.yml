name: E2E and Unit Tests
on:
  - push

# Tweak these to alter config
env:
  CY_URL: http://localhost:3000
  CY_CFG_FILE: ./cypress/cypress.json
  CY_BOOTSTRAP: ./cypress/integration/bootstrap.js
  CY_COVERAGE_OUTPUT: ./cypress/coverage/lcov.info

jobs:
  # Run unit and e2e tests
  test:
    strategy:
      matrix:
        browser: [ chrome, firefox ]
        os: [ macos-latest, windows-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      # Install yarn packages and setup project
      - uses: actions/checkout@v2
      - name: Cache packages
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --check-files --frozen-lockfile --non-interactive

      - name: Run cypress (e2e and unit tests)
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          headless: true
          build: yarn build
          start: yarn dev
          wait-on: ${{ env.CY_URL }}
          config-file: ${{ env.CY_CFG_FILE }}
          spec: ${{ env.CY_BOOTSTRAP }}

      # Upload coverage report to codecov and codacy
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ${{ env.CY_COVERAGE_OUTPUT }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v0.2.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ env.CY_COVERAGE_OUTPUT }}

