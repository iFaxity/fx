name: Cypress
on:
  - push

# Tweak these to alter config
env:
  DEBUG: code-coverage
  CY_URL: http://localhost:3000
  CY_CFG_FILE: ./cypress/cypress.json
  CY_BOOTSTRAP: ./cypress/integration/bootstrap.ts
  CY_COVERAGE_OUTPUT: ./cypress/coverage/lcov.info
  CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
  CACHE_PATHS: |
    **/node_modules
    ~/.cache/Cypress
    packages/*/dist

jobs:
  # Install yarn packages and setup project
  setup:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
          check-latest: true
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: ${{ runner.os }}#${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile --non-interactive

      # Always build packages in setup
      - name: Build packages
        run: yarn ci

  # Testing through cypress
  test:
    needs: setup
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        browser: [ chrome, firefox ]
        experimental: [ false ]

        include:
          - os: windows-latest
            browser: edge
          # Cypress + Windows = fails, sometimes
          - os: windows-latest
            experimental: true

    steps:
      # Restore packages from cache
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
          check-latest: true
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: ${{ runner.os }}#${{ hashFiles('yarn.lock') }}

      - name: Run cypress (Cypress)
        uses: cypress-io/github-action@v2
        with:
          browser: ${{ matrix.browser }}
          start: yarn dev
          wait-on: ${{ env.CY_URL }}
          config-file: ${{ env.CY_CFG_FILE }}
          spec: ${{ env.CY_BOOTSTRAP }}

      # Upload coverage report to codecov and codacy
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          file: ${{ env.CY_COVERAGE_OUTPUT }}
          name: ${{ runner.os }} - ${{ matrix.browser }}
          # Should be true, but Windows is being difficult
          fail_ci_if_error: false

      # Doesn't yet support macOS or Windows
      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@v0.2.0
        if: runner.os == 'Linux'
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ env.CY_COVERAGE_OUTPUT }}

